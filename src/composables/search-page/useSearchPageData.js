// src/composables/search-page/useSearchPageData.js
import { useQuery } from '@tanstack/vue-query'
import api from 'axios'
import { API_BASE_URL } from 'src/config/api'
import { buildUrlWithParams } from 'src/utils/lang'
import { computed } from 'vue'

/**
 * Hook ƒë·ªÉ fetch d·ªØ li·ªáu t√¨m ki·∫øm anime
 * @param {Ref<string>} keyword - T·ª´ kh√≥a t√¨m ki·∫øm
 * @param {Ref<number>} page - S·ªë trang hi·ªán t·∫°i
 * @returns {Object} Vue Query result v·ªõi data, isLoading, error, refetch
 */
export function useSearchPageData(keyword, page) {
  return useQuery({
    queryKey: computed(() => ['search-page', keyword.value, page.value]),
    queryFn: async () => {
      // Kh√¥ng fetch n·∫øu kh√¥ng c√≥ keyword
      if (!keyword.value) {
        return null
      }

      // Build URL an to√†n v·ªõi params
      const url = buildUrlWithParams(`${API_BASE_URL}/search/full/`, {
        keyword: keyword.value,
        page: page.value
      })

      const response = await api.get(url)
      return response.data
    },
    enabled: computed(() => !!keyword.value), // Ch·ªâ fetch khi c√≥ keyword
    staleTime: 1000 * 60 * 5, // 5 ph√∫t
    cacheTime: 1000 * 60 * 30, // 30 ph√∫t
    meta: {
      persist: false, // üö´ kh√¥ng l∆∞u query n√†y v√†o localStorage
    },
  })
}
